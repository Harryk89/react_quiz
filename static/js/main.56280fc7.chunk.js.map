{"version":3,"sources":["components/navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js","components/navigation/Drawer/Drawer.css","components/navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","components/UI/Loader/Loader.css","components/UI/Input/Input.css","containers/Auth/Auth.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","containers/QuizList/QuizList.css"],"names":["MenuToggle","props","cls","classes","isOpen","push","open","react_default","a","createElement","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","_this","onClose","links","_this2","this","map","link","index","key","NavLink","to","exact","activeClassName","active","label","close","isAuthenticated","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","navigation_Drawer_Drawer","navigation_MenuToggle_MenuToggle","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","AnswersList_AnswerItem_AnswerItem","ActiveQuiz","Question","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","Link","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","defineProperty","timeout","window","setTimeout","number","isquizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","UI_Loader_Loader","isFinished","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizId","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","get","concat","sent","data","t0","stop","_x2","apply","arguments","isInvalid","_ref","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Select","options","option","createControl","config","validation","objectSpread","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","createOptionControl","required","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","event","preventDefault","addQuestionHandler","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","undefined","isValid","trim","validate","selectChangeHandler","target","console","log","Auxiliary_Auxiliary","UI_Input_Input","select","UI_Select_Select","onSubmit","renderControls","item","_callee","_context","post","_x","QuizList","name","fetchQuizes","renderQuizes","forEach","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","email","password","minLength","loginHandler","registerHandler","onChangeHandler","validateControl","test","String","toLowerCase","AuthForm","renderInputs","isLogin","authData","url","expirationDate","returnSecureToken","Date","getTime","expiresIn","setItem","idToken","localId","Logout","Redirect","App","autoLogin","routes","Switch","Route","path","component","hoc_Layout_Layout","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReduser","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","success","primery","lds-ripple"],"mappings":"oNAwBeA,EArBI,SAAAC,GAElB,IAAMC,EAAM,CACXC,IAAQH,WACR,MASD,OANIC,EAAMG,QACTF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQG,OAEbJ,EAAIG,KAAK,WAGbE,EAAAC,EAAAC,cAAA,KACCC,UAAWR,EAAIS,KAAK,KACpBC,QAASX,EAAMY,uDCdHC,EAFE,SAAAb,GAAK,OAAIM,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQW,SAAUF,QAASX,EAAMW,WCiE5DG,6MAtDdC,aAAe,WACdC,EAAKhB,MAAMiB,sFAGAC,GAAO,IAAAC,EAAAC,KAClB,OAAOF,EAAMG,IAAI,SAACC,EAAMC,GACvB,OACCjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GACRjB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACCC,GAAIJ,EAAKI,GACTC,MAAOL,EAAKK,MACZC,gBAAiB1B,IAAQ2B,OACzBlB,QAASQ,EAAKJ,cAEbO,EAAKQ,2CASV,IAAM7B,EAAM,CAACC,IAAQY,QAEhBM,KAAKpB,MAAMG,QAAQF,EAAIG,KAAKF,IAAQ6B,OAEzC,IAAMb,EAAQ,CACb,CAACQ,GAAI,IAAKI,MAAO,uCAAUH,OAAO,IAYnC,OAPIP,KAAKpB,MAAMgC,iBACdd,EAAMd,KAAK,CAACsB,GAAI,gBAAiBI,MAAO,sEAAgBH,OAAO,IAC/DT,EAAMd,KAAK,CAACsB,GAAI,UAAWI,MAAO,iCAASH,OAAO,KAElDT,EAAMd,KAAK,CAACsB,GAAI,QAASI,MAAO,qEAAeH,OAAO,IAItDrB,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,SAAP,KACC3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAIS,KAAK,MACxBJ,EAAAC,EAAAC,cAAA,UACEY,KAAKc,YAAYhB,KAInBE,KAAKpB,MAAMG,OAASG,EAAAC,EAAAC,cAAC2B,EAAD,CAAUxB,QAASS,KAAKpB,MAAMiB,UAAc,aAlDhDmB,oBCLfC,6MAELC,MAAQ,CACPC,MAAM,KAGPC,kBAAoB,WACnBxB,EAAKyB,SAAS,CACbF,MAAOvB,EAAKsB,MAAMC,UAIpBG,iBAAmB,WAClB1B,EAAKyB,SAAS,CACbF,MAAM,6EAKP,OACCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQmC,QAEvB/B,EAAAC,EAAAC,cAACmC,EAAD,CACCxC,OAAQiB,KAAKkB,MAAMC,KACnBtB,QAASG,KAAKsB,iBACdV,gBAAiBZ,KAAKpB,MAAMgC,kBAG7B1B,EAAAC,EAAAC,cAACoC,EAAD,CACChC,SAAUQ,KAAKoB,kBACfrC,OAAQiB,KAAKkB,MAAMC,OAGpBjC,EAAAC,EAAAC,cAAA,YAAQY,KAAKpB,MAAM6C,kBAjCFT,aA6CNU,kBANf,SAAyBR,GACxB,MAAO,CACNN,kBAAmBM,EAAMS,KAAKC,QAIjBF,CAAyBT,0GC/BzBY,EAlBI,SAAAjD,GAElB,IAAMC,EAAM,CAACC,IAAQ+C,YAMrB,OAJIjD,EAAMsC,OACTrC,EAAIG,KAAKF,IAAQF,EAAMsC,QAIvBhC,EAAAC,EAAAC,cAAA,MACCC,UAAWR,EAAIS,KAAK,KACpBC,QAAS,kBAAMX,EAAMkD,cAAclD,EAAMmD,OAAOC,MAE9CpD,EAAMmD,OAAOE,OCIHC,EAhBK,SAAAtD,GAAK,OAExBM,EAAAC,EAAAC,cAAA,MAAIC,UAAWP,IAAQoD,aACpBtD,EAAMuD,QAAQlC,IAAI,SAAC8B,EAAQ5B,GAC5B,OACCjB,EAAAC,EAAAC,cAACgD,EAAD,CACChC,IAAKD,EACL4B,OAAQA,EACRD,cAAelD,EAAMkD,cACrBZ,MAAOtC,EAAMsC,MAAQtC,EAAMsC,MAAMa,EAAOC,IAAM,WCSpCK,EAlBI,SAAAzD,GAAK,OACvBM,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQuD,YACvBnD,EAAAC,EAAAC,cAAA,KAAGC,UAAWP,IAAQwD,UACrBpD,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,cAASR,EAAM2D,aAAf,KADD,OAEE3D,EAAM4D,UAGRtD,EAAAC,EAAAC,cAAA,aAAQR,EAAM2D,aAAd,iBAAgC3D,EAAM6D,aAEvCvD,EAAAC,EAAAC,cAACsD,EAAD,CACCP,QAASvD,EAAMuD,QACfL,cAAelD,EAAMkD,cACrBZ,MAAOtC,EAAMsC,4CCIDyB,EAlBA,SAAA/D,GAEd,IAAMC,EAAM,CACXC,IAAQ6D,OACR7D,IAAQF,EAAMgE,OAGf,OACC1D,EAAAC,EAAAC,cAAA,UACCG,QAASX,EAAMW,QACfF,UAAWR,EAAIS,KAAK,KACpBuD,SAAUjE,EAAMiE,UAEfjE,EAAM6C,mBCiCKqB,EA5CM,SAAAlE,GAEpB,IAAMmE,EAAeC,OAAOC,KAAKrE,EAAMsE,SAASC,OAAO,SAACC,EAAOhD,GAK9D,MAJ2B,YAAvBxB,EAAMsE,QAAQ9C,IACjBgD,IAGMA,GACL,GAEH,OACClE,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQgE,cACvB5D,EAAAC,EAAAC,cAAA,UACER,EAAMyE,KAAKpD,IAAI,SAACqD,EAAUnD,GAC1B,IAAMtB,EAAM,CACX,KAC+B,UAA/BD,EAAMsE,QAAQI,EAAStB,IAAkB,WAAa,WACtDlD,IAAQF,EAAMsE,QAAQI,EAAStB,MAGhC,OACC9C,EAAAC,EAAAC,cAAA,MACCgB,IAAKD,GAELjB,EAAAC,EAAAC,cAAA,cAASe,EAAQ,GAHlB,SAIEmD,EAASd,SACVtD,EAAAC,EAAAC,cAAA,KAAGC,UAAWR,EAAIS,KAAK,WAM3BJ,EAAAC,EAAAC,cAAA,mEAAc2D,EAAd,iBAAgCnE,EAAMyE,KAAKE,QAE3CrE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoE,EAAD,CAAQjE,QAASX,EAAM6E,QAASb,KAAK,WAArC,0DACA1D,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpD,GAAI,KACTpB,EAAAC,EAAAC,cAACoE,EAAD,CAAQZ,KAAK,WAAb,oJC/BUe,EARA,SAAA/E,GAAK,OACnBM,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQ8E,QACvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQ6E,QACvBzE,EAAAC,EAAAC,cAAA,YAAOF,EAAAC,EAAAC,cAAA,uBCJKyE,WAAMC,OAAO,CAC3BC,QAAS,mFCHGC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAqB,qBAErBC,GAAiB,iBACjBC,GAAc,cACdC,GAAqB,qBACrBC,GAAa,aAEbC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAe,eACfC,GAAc,cCmCpB,SAASC,GAAiBvB,GAChC,MAAO,CACNT,KAAMuB,GACNd,QAIK,SAASwB,KACf,MAAO,CACNjC,KAAMoB,IAKD,SAASc,GAAmBC,GAClC,MAAO,CACNnC,KAAMqB,GACNc,UAIK,SAASC,GAAiBC,GAChC,MAAO,CACNrC,KAAMsB,GACNgB,MAAOD,GAIF,SAASE,GAAaC,EAAalC,GACzC,MAAO,CACNN,KAAMwB,GACNgB,cAAalC,WAuBR,SAASmC,GAAgBC,GAC/B,OAAO,SAACC,EAAUC,GAEjB,IAAMtE,EAAQsE,IAAWnC,KAEzB,GAAInC,EAAMkE,YAAa,CACb,IAAMhF,EAAM4C,OAAOC,KAAK/B,EAAMkE,aAAa,GAC3C,GAA+B,YAA3BlE,EAAMkE,YAAYhF,GAAoB,OAO9C,IAAMoC,EAAWtB,EAAMmC,KAAKnC,EAAMuE,gBAC5BvC,EAAUhC,EAAMgC,QAEtB,GAAIV,EAASkD,gBAAkBJ,EAAU,CAChCpC,EAAQV,EAASR,MAClBkB,EAAQV,EAASR,IAAM,WAG3BuD,EAASJ,GAAanC,OAAA2C,GAAA,EAAA3C,CAAA,GAAEsC,EAAW,WAAYpC,IAO/C,IAAM0C,EAAUC,OAAOC,WAAW,WA1CvC,IAA0BC,GAsEjC,SAAwB7E,GACvB,OAAOA,EAAMuE,eAAiB,IAAMvE,EAAMmC,KAAKE,OA5B5ByC,CAAe9E,GAMlBqE,GAjDgBQ,EAiDU7E,EAAMuE,eAAiB,EAhD3D,CACL7C,KAAM0B,GACNyB,YAyCYR,EAjDP,CACL3C,KAAMyB,KA6DQwB,OAAOI,aAAaL,IACrB,UAEH1C,EAAQV,EAASR,IAAM,QACvBuD,EAASJ,GAAanC,OAAA2C,GAAA,EAAA3C,CAAA,GAAEsC,EAAW,SAAUpC,SC9InDgD,+LAgEElG,KAAKpB,MAAMuH,cAAcnG,KAAKpB,MAAMwH,MAAMC,OAAOrE,mDAIjDhC,KAAKpB,MAAM0H,6CAIX,OACIpH,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQoH,MACvBhH,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,IAAQyH,aACvBrH,EAAAC,EAAAC,cAAA,yIAEUY,KAAKpB,MAAM4H,UAAYxG,KAAKpB,MAAMyE,KAChCnE,EAAAC,EAAAC,cAACqH,EAAD,MACAzG,KAAKpB,MAAM8H,WACbxH,EAAAC,EAAAC,cAACuH,EAAD,CACIzD,QAASlD,KAAKpB,MAAMsE,QACpBG,KAAMrD,KAAKpB,MAAMyE,KACjBI,QAASzD,KAAKpB,MAAM0H,YAExBpH,EAAAC,EAAAC,cAACwH,EAAD,CACIzE,QAASnC,KAAKpB,MAAMyE,KAAKrD,KAAKpB,MAAM6G,gBAAgB1D,OACpDS,SAAUxC,KAAKpB,MAAMyE,KAAKrD,KAAKpB,MAAM6G,gBAAgBjD,SACrDV,cAAe9B,KAAKpB,MAAMyG,gBAC1B5C,WAAYzC,KAAKpB,MAAMyE,KAAKE,OAC5BhB,aAAcvC,KAAKpB,MAAM6G,eAAiB,EAC1CvE,MAAOlB,KAAKpB,MAAMwG,uBA3F3BpE,aAuHJU,mBAnBf,SAAyBR,GACrB,MAAO,CACHgC,QAAShC,EAAMmC,KAAKH,QACpBwD,WAAYxF,EAAMmC,KAAKqD,WACvBjB,eAAgBvE,EAAMmC,KAAKoC,eAC3BL,YAAalE,EAAMmC,KAAK+B,YACxB/B,KAAMnC,EAAMmC,KAAKA,KACjBmD,QAAStF,EAAMmC,KAAKmD,UAI5B,SAA4BjB,GACxB,MAAO,CACHY,cAAe,SAAAnE,GAAE,OAAIuD,GDvFEsB,ECuFqB7E,EDtFnD,eAAA8E,EAAA9D,OAAA+D,GAAA,EAAA/D,CAAAgE,GAAA7H,EAAA8H,KAAO,SAAAC,EAAM3B,GAAN,IAAA4B,EAAA9D,EAAA,OAAA2D,GAAA7H,EAAAiI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNhC,EAASV,MADHwC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI2B1D,EAAM2D,IAAN,WAAAC,OAAqBZ,EAArB,UAJ3B,OAIUM,EAJVE,EAAAK,KAKUrE,EAAO8D,EAASQ,KACtBpC,EAASX,GAAiBvB,IAN9BgE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAQI9B,EAASP,GAAgBqC,EAAAO,KAR7B,yBAAAP,EAAAQ,SAAAX,EAAAlH,KAAA,YAAP,gBAAA8H,GAAA,OAAAhB,EAAAiB,MAAA/H,KAAAgI,YAAA,KADM,IAAwBnB,GCwFvBxB,gBAAiB,SAAAC,GAAQ,OAAIC,EAASF,GAAgBC,KACtDgB,UAAW,kBAAMf,ED1BjB,CACN3C,KAAM2B,QC6BO7C,CAA6CwE,oDC7H5D,SAAS+B,GAATC,GAAqD,IAAjCC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,eACnC,OAAQF,GAASE,GAAkBD,EAGpC,IA4BeE,GA5BD,SAAA1J,GACb,IAAM2J,EAAY3J,EAAMgE,MAAQ,OAC1B/D,EAAM,CAACC,KAAQwJ,OACfE,EAAO,GAAAf,OAAMc,EAAN,KAAAd,OAAmBgB,KAAKC,UAMrC,OAJIT,GAAUrJ,IACbC,EAAIG,KAAKF,KAAQ6J,SAIjBzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAIS,KAAK,MACxBJ,EAAAC,EAAAC,cAAA,SAAOoJ,QAASA,GAAU5J,EAAM8B,OAChCxB,EAAAC,EAAAC,cAAA,SACCwD,KAAM2F,EACNvG,GAAIwG,EACJI,MAAOhK,EAAMgK,MACbC,SAAUjK,EAAMiK,WAIhBZ,GAAUrJ,GAASM,EAAAC,EAAAC,cAAA,YAAOR,EAAMkK,cAAgB,oIAAoC,2BCEzEC,GA1BA,SAAAnK,GACd,IAAM4J,EAAO,GAAAf,OAAM7I,EAAM8B,MAAZ,KAAA+G,OAAqBgB,KAAKC,UAEvC,OACCxJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQiK,QACvB7J,EAAAC,EAAAC,cAAA,SAAOoJ,QAASA,GAAU5J,EAAM8B,OAChCxB,EAAAC,EAAAC,cAAA,UACC4C,GAAIwG,EACJI,MAAOhK,EAAMgK,MACbC,SAAUjK,EAAMiK,UAEfjK,EAAMoK,QAAQ/I,IAAI,SAACgJ,EAAQ9I,GAC3B,OACCjB,EAAAC,EAAAC,cAAA,UACCwJ,MAAOK,EAAOL,MACdxI,IAAK6I,EAAOL,MAAQzI,GAEnB8I,EAAOhH,WCpBR,SAASiH,GAAcC,EAAQC,GACrC,OAAOpG,OAAAqG,GAAA,EAAArG,CAAA,GACHmG,EADJ,CAECC,aACAjB,OAAQiB,EACRhB,SAAS,EACTQ,MAAO,KAkBF,SAASU,GAAaC,GAC5B,IAAIC,GAAc,EAElB,IAAK,IAAIC,KAAWF,EACfA,EAAaG,eAAeD,KAC/BD,EAAcD,EAAaE,GAAStB,OAASqB,GAI/C,OAAOA,ECjCR,IAEeG,GAFG,SAAA/K,GAAK,OAAIA,EAAM6C,UCWjC,SAASmI,GAAoB7D,GAC5B,OAAOmD,GAAc,CAClBxI,MAAK,8CAAA+G,OAAa1B,GAClB+C,aAAc,6JACd9G,GAAI+D,GACF,CAAC8D,UAAU,IAGjB,SAASC,KACR,MAAO,CACLtH,SAAU0G,GAAc,CACvBxI,MAAO,kFACPoI,aAAc,kJACZ,CAACe,UAAU,IACdE,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,GAC7BM,QAASN,GAAoB,QAI1BO,8MAELjJ,MAAQ,CAEPsI,aAAa,EACb9D,cAAe,EACf6D,aAAcO,QAGfM,cAAgB,SAAAC,GACfA,EAAMC,oBAGPC,mBAAqB,SAAAF,GACpBA,EAAMC,iBADuB,IAAAE,EAM0B5K,EAAKsB,MAAMqI,aAA3D/G,EANsBgI,EAMtBhI,SAAUuH,EANYS,EAMZT,QAASC,EANGQ,EAMHR,QAASC,EANNO,EAMMP,QAASC,EANfM,EAMeN,QAEtCO,EAAe,CACpBjI,SAAUA,EAASoG,MACnB5G,GAAIpC,EAAKhB,MAAMyE,KAAKE,OAAS,EAC7BmC,cAAe9F,EAAKsB,MAAMwE,cAC1B3D,OAAQ,CACP,CAACE,KAAM8H,EAAQnB,MAAO5G,GAAI+H,EAAQ/H,IAClC,CAACC,KAAM+H,EAAQpB,MAAO5G,GAAIgI,EAAQhI,IAClC,CAACC,KAAMgI,EAAQrB,MAAO5G,GAAIiI,EAAQjI,IAClC,CAACC,KAAMiI,EAAQtB,MAAO5G,GAAIkI,EAAQlI,MAIpCpC,EAAKhB,MAAM8L,mBAAmBD,GAI9B7K,EAAKyB,SAAS,CAEbmI,aAAa,EACb9D,cAAe,EACf6D,aAAcO,UAKhBa,kBAAoB,SAAAN,GACnBA,EAAMC,iBAKL1K,EAAKyB,SAAS,CAEbmI,aAAa,EACb9D,cAAe,EACf6D,aAAcO,OAGflK,EAAKhB,MAAMgM,sBAMbC,cAAgB,SAACjC,EAAOkC,GACvB,IAAMvB,EAAYvG,OAAAqG,GAAA,EAAArG,CAAA,GAASpD,EAAKsB,MAAMqI,cAChCE,EAAOzG,OAAAqG,GAAA,EAAArG,CAAA,GAAQuG,EAAauB,IAElCrB,EAAQrB,SAAU,EAClBqB,EAAQb,MAAQA,EAChBa,EAAQtB,MF7FH,SAAmBS,GAAwB,IAAjBQ,EAAiBpB,UAAAzE,OAAA,QAAAwH,IAAA/C,UAAA,GAAAA,UAAA,GAAN,KAC3C,IAAKoB,EACJ,OAAO,EAGR,IAAI4B,GAAU,EAMd,OAJI5B,EAAWS,WACdmB,EAA2B,KAAjBpC,EAAMqC,QAAiBD,GAG3BA,EEkFUE,CAASzB,EAAQb,MAAOa,EAAQL,YAEhDG,EAAauB,GAAerB,EAE5B7J,EAAKyB,SAAS,CACbkI,eACAC,YAAaF,GAAaC,QAyB5B4B,oBAAsB,SAAAd,GACrBzK,EAAKyB,SAAS,CACbqE,eAAgB2E,EAAMe,OAAOxC,QAE9ByC,QAAQC,IAAI,wBAAyBjB,EAAMe,OAAOxC,wFAzBlC,IAAA7I,EAAAC,KAChB,OAAOgD,OAAOC,KAAKjD,KAAKkB,MAAMqI,cAActJ,IAAI,SAAC6K,EAAa3K,GAC7D,IAAMsJ,EAAU1J,EAAKmB,MAAMqI,aAAauB,GAExC,OACC5L,EAAAC,EAAAC,cAACmM,GAAD,CAAWnL,IAAK0K,EAAc3K,GAC9BjB,EAAAC,EAAAC,cAACoM,GAAD,CACC9K,MAAO+I,EAAQ/I,MACfkI,MAAOa,EAAQb,MACfT,MAAOsB,EAAQtB,MACfE,iBAAkBoB,EAAQL,WAC1BhB,QAASqB,EAAQrB,QACjBU,aAAcW,EAAQX,aACtBD,SAAU,SAAAwB,GAAK,OAAItK,EAAK8K,cAAcR,EAAMe,OAAOxC,MAAOkC,MAEhD,IAAV3K,EAAcjB,EAAAC,EAAAC,cAAA,WAAQ,yCAezB,IAAMqM,EAASvM,EAAAC,EAAAC,cAACsM,GAAD,CACdhL,MAAM,+IACNkI,MAAO5I,KAAKkB,MAAMwE,cAClBmD,SAAU7I,KAAKmL,oBACfnC,QAAS,CACR,CAAC/G,KAAM,EAAG2G,MAAO,GACjB,CAAC3G,KAAM,EAAG2G,MAAO,GACjB,CAAC3G,KAAM,EAAG2G,MAAO,GACjB,CAAC3G,KAAM,EAAG2G,MAAO,MAInB,OACC1J,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQqL,aACvBjL,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,QAAMuM,SAAU3L,KAAKoK,eAEnBpK,KAAK4L,iBAELH,EAEDvM,EAAAC,EAAAC,cAACoE,EAAD,CACCZ,KAAK,UACLrD,QAASS,KAAKuK,mBACd1H,UAAW7C,KAAKkB,MAAMsI,aAHvB,yFAOAtK,EAAAC,EAAAC,cAACoE,EAAD,CACCZ,KAAK,UACLrD,QAASS,KAAK2K,kBACd9H,SAAqC,IAA3B7C,KAAKpB,MAAMyE,KAAKE,QAH3B,iFA7IoBvC,aAyKXU,mBAdf,SAAyBR,GACxB,MAAO,CACNmC,KAAMnC,EAAM4C,OAAOT,OAIrB,SAA4BkC,GAC3B,MAAO,CACNmF,mBAAoB,SAAAmB,GAAI,OAAItG,EC9LvB,SAA4BsG,GAClC,MAAO,CACNjJ,KAAM4B,GACNqH,QD2LqCnB,CAAmBmB,KACxDjB,iBAAkB,kBAAMrF,ECjLzB,eAAA2C,EAAAlF,OAAA+D,GAAA,EAAA/D,CAAAgE,GAAA7H,EAAA8H,KAAO,SAAA6E,EAAOvG,EAAUC,GAAjB,OAAAwB,GAAA7H,EAAAiI,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EACA1D,EAAMmI,KAAK,eAAgBxG,IAAW1B,OAAOT,MAD7C,OAENkC,EARM,CACN3C,KAAM6B,KAKA,wBAAAsH,EAAAlE,SAAAiE,EAAA9L,SAAP,gBAAAiM,EAAAnE,GAAA,OAAAI,EAAAH,MAAA/H,KAAAgI,YAAA,ODsLctG,CAA8CyI,wBEhMvD+B,0LAQJ,OAAOlM,KAAKpB,MAAMmG,OAAO9E,IAAI,SAAAoD,GAC5B,OACCnE,EAAAC,EAAAC,cAAA,MACCgB,IAAKiD,EAAKrB,IAEV9C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAASC,GAAI,SAAW+C,EAAKrB,IAC3BqB,EAAK8I,gKASVnM,KAAKpB,MAAMwN,iJAqBX,OACClN,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQoN,UACvBhN,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uFAGCY,KAAKpB,MAAM4H,SAAuC,GAA5BxG,KAAKpB,MAAMmG,OAAOxB,OACrCrE,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAAA,UACAY,KAAKqM,yBArDSrL,aA2ERU,mBAbf,SAAyBR,GACxB,MAAM,CACL6D,OAAQ7D,EAAMmC,KAAK0B,OACnByB,QAAStF,EAAMmC,KAAKmD,UAItB,SAA4BjB,GAC3B,MAAM,CACL6G,YAAa,kBAAM7G,ERpEpB,eAAA2C,EAAAlF,OAAA+D,GAAA,EAAA/D,CAAAgE,GAAA7H,EAAA8H,KAAO,SAAA6E,EAAMvG,GAAN,IAAA4B,EAAApC,EAAA,OAAAiC,GAAA7H,EAAAiI,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cACNhC,EAASV,MADHkH,EAAAzE,KAAA,EAAAyE,EAAAxE,KAAA,EAGkB1D,EAAM2D,IAAI,gBAH5B,OAGCL,EAHD4E,EAAArE,KAIC3C,EAAS,GACf/B,OAAOC,KAAKkE,EAASQ,MAAM2E,QAAQ,SAAClM,EAAKD,GACxC4E,EAAO/F,KAAK,CACXgD,GAAI5B,EACJ+L,KAAI,kCAAA1E,OAAWtH,EAAQ,OAOzBoF,EAAST,GAAmBC,IAfvBgH,EAAAxE,KAAA,iBAAAwE,EAAAzE,KAAA,GAAAyE,EAAAnE,GAAAmE,EAAA,SAkBLxG,EAASP,GAAgB+G,EAAAnE,KAlBpB,yBAAAmE,EAAAlE,SAAAiE,EAAA9L,KAAA,aAAP,gBAAAiM,GAAA,OAAA/D,EAAAH,MAAA/H,KAAAgI,YAAA,OQwEctG,CAA6CwK,wBChDrD,SAASK,GAAWC,GAC1B,OAAO,SAAAjH,GACNO,WAAW,WACVP,EAASkH,OACA,IAAPD,IAKE,SAASC,KAIf,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACN/J,KAAM+B,IAoBD,SAASiI,GAAYhL,GAC3B,MAAO,CACNgB,KAAM8B,GACN9C,aC5DIiL,8MAEL3L,MAAQ,CACPqI,aAAc,CACbuD,MAAO,CACNlE,MAAO,GACPhG,KAAM,QACNlC,MAAO,QACPoI,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTgB,WAAY,CACXS,UAAU,EACViD,OAAO,IAGTC,SAAU,CACTnE,MAAO,GACPhG,KAAM,WACNlC,MAAO,uCACPoI,aAAc,+IACdX,OAAO,EACPC,SAAS,EACTgB,WAAY,CACXS,UAAU,EACVmD,UAAW,QAMfC,aAAe,WAEdrN,EAAKhB,MAAM+C,KACV/B,EAAKsB,MAAMqI,aAAauD,MAAMlE,MAC9BhJ,EAAKsB,MAAMqI,aAAawD,SAASnE,OACjC,MAgBFsE,gBAAkB,WACjBtN,EAAKhB,MAAM+C,KACV/B,EAAKsB,MAAMqI,aAAauD,MAAMlE,MAC9BhJ,EAAKsB,MAAMqI,aAAawD,SAASnE,OACjC,MAeFwB,cAAgB,SAAAC,GACfA,EAAMC,oBAyBP6C,gBAAkB,SAAC9C,EAAOS,GAEzB,IAAMvB,EAAYvG,OAAAqG,GAAA,EAAArG,CAAA,GAASpD,EAAKsB,MAAMqI,cAChCE,EAAOzG,OAAAqG,GAAA,EAAArG,CAAA,GAAQuG,EAAauB,IAElCrB,EAAQb,MAAQyB,EAAMe,OAAOxC,MAC7Ba,EAAQrB,SAAU,EAClBqB,EAAQtB,MAAQvI,EAAKwN,gBAAgB3D,EAAQb,MAAOa,EAAQL,YAE5DG,EAAauB,GAAerB,EAE5B,IAAID,GAAc,EAElBxG,OAAOC,KAAKsG,GAAc+C,QAAQ,SAAAH,GACjC3C,EAAcD,EAAa4C,GAAMhE,OAASqB,IAG3C5J,EAAKyB,SAAS,CACbkI,eAAcC,gGAxCAZ,EAAOQ,GACtB,IAAKA,EACJ,OAAO,EAGR,IAAI4B,GAAU,EAcd,OAZI5B,EAAWS,WACdmB,EAA2B,KAAjBpC,EAAMqC,QAAiBD,GAG9B5B,EAAW0D,QACd9B,EA3FU,0JACCqC,KAAKC,OA0FQ1E,GA1FM2E,gBA0FIvC,GAG/B5B,EAAW4D,YACdhC,EAAUpC,EAAMrF,QAAU6F,EAAW4D,WAAahC,GAG5CA,yCAyBO,IAAAjL,EAAAC,KACd,OAAOgD,OAAOC,KAAKjD,KAAKkB,MAAMqI,cAActJ,IAAI,SAAC6K,EAAa3K,GAC7D,IAAMsJ,EAAU1J,EAAKmB,MAAMqI,aAAauB,GACxC,OACC5L,EAAAC,EAAAC,cAACoM,GAAD,CACCpL,IAAK0K,EAAc3K,EACnByC,KAAM6G,EAAQ7G,KACdgG,MAAOa,EAAQb,MACfT,MAAOsB,EAAQtB,MACfC,QAASqB,EAAQrB,QACjB1H,MAAO+I,EAAQ/I,MACf2H,iBAAkBoB,EAAQL,WAC1BN,aAAcW,EAAQX,aACtBD,SAAU,SAAAwB,GAAK,OAAItK,EAAKoN,gBAAgB9C,EAAOS,yCAOlD,OACC5L,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,KAAQ+N,MACvB3N,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,gFAEAF,EAAAC,EAAAC,cAAA,QAAMuM,SAAU3L,KAAKoK,cAAe/K,UAAWP,KAAQ0O,UACrDxN,KAAKyN,eAENvO,EAAAC,EAAAC,cAACoE,EAAD,CACCZ,KAAK,UACLrD,QAASS,KAAKiN,aACdpK,UAAW7C,KAAKkB,MAAMsI,aAHvB,kCAOAtK,EAAAC,EAAAC,cAACoE,EAAD,CACCZ,KAAK,UACLrD,QAASS,KAAKkN,gBACdrK,UAAW7C,KAAKkB,MAAMsI,aAHvB,0HA1JaxI,aA8KJU,mBAAS,KANxB,SAA4B6D,GAC3B,MAAO,CACN5D,KAAM,SAACmL,EAAOC,EAAUW,GAAlB,OAA8BnI,EDlL/B,SAAcuH,EAAOC,EAAUW,GACrC,sBAAAxF,EAAAlF,OAAA+D,GAAA,EAAA/D,CAAAgE,GAAA7H,EAAA8H,KAAO,SAAA6E,EAAMvG,GAAN,IAAAoI,EAAAC,EAAAzG,EAAAQ,EAAAkG,EAAA,OAAA7G,GAAA7H,EAAAiI,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cACAoG,EAAW,CAChBb,QAAOC,WACPe,mBAAmB,GAGhBF,EAAM,uHAENF,IACHE,EAAM,yHATD7B,EAAAxE,KAAA,EAYiB1D,EAAMmI,KAAK4B,EAAKD,GAZjC,OAYAxG,EAZA4E,EAAArE,KAaAC,EAAOR,EAASQ,KAEhBkG,EAAiB,IAAIE,MAAK,IAAIA,MAAOC,UAA6B,IAAjBrG,EAAKsG,WAE5DvB,aAAawB,QAAQ,QAASvG,EAAKwG,SACnCzB,aAAawB,QAAQ,SAAUvG,EAAKyG,SACpC1B,aAAawB,QAAQ,iBAAkBL,GAEvCtI,EAASqH,GAAYjF,EAAKwG,UAC1B5I,EAASgH,GAAW5E,EAAKsG,YAtBnB,yBAAAlC,EAAAlE,SAAAiE,EAAA9L,SAAP,gBAAAiM,GAAA,OAAA/D,EAAAH,MAAA/H,KAAAgI,YAAA,GCiL8CrG,CAAKmL,EAAOC,EAAUW,OAItDhM,CAAmCmL,ICtL5CwB,+LAGJrO,KAAKpB,MAAM6N,0CAIX,OAAOvN,EAAAC,EAAAC,cAACkP,EAAA,EAAD,CAAUhO,GAAI,aAPFU,aAkBNU,mBAAQ,KANvB,SAA4B6D,GAC3B,MAAO,CACNkH,OAAQ,kBAAMlH,EAASkH,SAIV/K,CAAkC2M,ICX3CE,+LAGEvO,KAAKpB,MAAM4P,6CAKX,IAAIC,EACAvP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,KACIxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWhC,KAC/B3N,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAW3I,KACnChH,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,IAAIrO,OAAK,EAACsO,UAAW3C,KACjChN,EAAAC,EAAAC,cAACkP,EAAA,EAAD,CAAUhO,GAAG,OAiBrB,OAbIN,KAAKpB,MAAMgC,kBACX6N,EACIvP,EAAAC,EAAAC,cAACsP,EAAA,EAAD,KACIxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAW1E,KACvCjL,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAW3I,KACnChH,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWR,KACjCnP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,GAAGrO,OAAK,EAACsO,UAAW3C,KAChChN,EAAAC,EAAAC,cAACkP,EAAA,EAAD,CAAUhO,GAAG,QAOrBpB,EAAAC,EAAAC,cAAC0P,EAAD,KACML,UAhCAzN,aAkDH+N,mBAAWrN,YAZ1B,SAAyBR,GACrB,MAAO,CACHN,kBAAmBM,EAAMS,KAAKC,QAItC,SAA4B2D,GACxB,MAAO,CACHiJ,UAAW,kBAAMjJ,EHHjB,SAAAA,GACN,IAAM3D,EAAQ8K,aAAasC,QAAQ,SAEnC,GAAKpN,EACA,CACJ,IAAMiM,EAAiB,IAAIE,KAAKrB,aAAasC,QAAQ,mBACjDnB,GAAkB,IAAIE,KAAQxI,EAASkH,OAE1ClH,EAASqH,GAAYhL,IACrB2D,EAASgH,IAAYsB,EAAeG,WAAY,IAAID,MAAOC,WAAa,YAN9DzI,EAASkH,WGIG/K,CAA6C6M,eClDnDU,QACW,cAA7BpJ,OAAOqJ,SAASC,UAEe,UAA7BtJ,OAAOqJ,SAASC,UAEhBtJ,OAAOqJ,SAASC,SAAS/I,MACvB,wECRAgJ,GAAe,CACpBrK,OAAQ,GACRyB,SAAS,EACTtB,MAAO,KACPhC,QAAS,GACNwD,YAAY,EACZjB,eAAgB,EAChBL,YAAa,KAChB/B,KAAM,mBCdD+L,GAAe,CACpB/L,KAAM,ICDP,IAAM+L,GAAe,CACpBxN,MAAO,MCAOyN,oBAAiB,CAC/BhM,KHec,WAAmD,IAA9BnC,EAA8B8G,UAAAzE,OAAA,QAAAwH,IAAA/C,UAAA,GAAAA,UAAA,GAAtBoH,GAAcE,EAAQtH,UAAAzE,OAAA,EAAAyE,UAAA,QAAA+C,EAEjE,OAAOuE,EAAO1M,MACb,KAAKoB,GACJ,OAAOhB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWsF,SAAS,IAErB,KAAKvC,GACJ,OAAOjB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWsF,SAAS,EAAOzB,OAAQuK,EAAOvK,SAE3C,KAAKb,GACJ,OAAOlB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWsF,SAAS,EAAOtB,MAAOoK,EAAOpK,QAE1C,KAAKf,GACJ,OAAOnB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWsF,SAAS,EAAOnD,KAAMiM,EAAOjM,OAEzC,KAAKe,GACJ,OAAOpB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWkE,YAAakK,EAAOlK,YAAalC,QAASoM,EAAOpM,UAE7D,KAAKmB,GACJ,OAAOrB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWwF,YAAY,IAExB,KAAKpC,GACJ,OAAOtB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWkE,YAAa,KAAMK,eAAgB6J,EAAOvJ,SAEtD,KAAKxB,GACJ,OAAOvB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CAECuE,eAAgB,EACPL,YAAa,KACbsB,YAAY,EACZxD,QAAS,KAEpB,QACC,OAAOhC,IGtDT4C,OFCc,WAAqD,IAA9B5C,EAA8B8G,UAAAzE,OAAA,QAAAwH,IAAA/C,UAAA,GAAAA,UAAA,GAAtBoH,GAAcE,EAAQtH,UAAAzE,OAAA,EAAAyE,UAAA,QAAA+C,EACnE,OAAOuE,EAAO1M,MACb,KAAK4B,GACJ,OAAOxB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CAECmC,KAAKL,OAAAuM,GAAA,EAAAvM,CAAK9B,EAAMmC,MAAZoE,OAAA,CAAkB6H,EAAOzD,SAE/B,KAAKpH,GACJ,OAAOzB,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWmC,KAAM,KAElB,QACC,OAAOnC,IEZTS,KDAc,WAAmD,IAA9BT,EAA8B8G,UAAAzE,OAAA,QAAAwH,IAAA/C,UAAA,GAAAA,UAAA,GAAtBoH,GAAcE,EAAQtH,UAAAzE,OAAA,EAAAyE,UAAA,QAAA+C,EACjE,OAAQuE,EAAO1M,MACd,KAAK8B,GACJ,OAAO1B,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWU,MAAO0N,EAAO1N,QAE1B,KAAK+C,GACJ,OAAO3B,OAAAqG,GAAA,EAAArG,CAAA,GACH9B,EADJ,CACWU,MAAO,OAEnB,QACC,OAAOV,eERJsO,GACgB,kBAAX3J,QACPA,OAAO4J,qCACP5J,OAAO4J,qCAAqC,IACvCC,KAEHC,GAAQC,aAAYC,GAAaL,GAAiBM,aAAgBC,QAElEC,GACL9Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,CAAUN,MAASA,IAClBzQ,EAAAC,EAAAC,cAAC8Q,GAAA,EAAD,KACChR,EAAAC,EAAAC,cAAC+Q,GAAD,QAKHC,IAASC,OAAQL,GAAKM,SAASC,eAAe,SLsGxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCMlInBC,EAAAC,QAAA,CAAkBrR,OAAA,wBAAAiB,MAAA,uBAAAF,OAAA,6CCAlBqQ,EAAAC,QAAA,CAAkBpS,WAAA,gCAAAM,KAAA,+CCAlB6R,EAAAC,QAAA,CAAkB7K,KAAA,oBAAAK,YAAA,gDCAlBuK,EAAAC,QAAA,CAAkB1O,WAAA,gCAAAC,SAAA,mDCAlBwO,EAAAC,QAAA,CAAkBlP,WAAA,gCAAAmP,QAAA,6BAAA9L,MAAA,gDCAlB4L,EAAAC,QAAA,CAAkBjO,aAAA,oCAAAkO,QAAA,+BAAA9L,MAAA,kDCAlB4L,EAAAC,QAAA,CAAkBpO,OAAA,wBAAAuC,MAAA,uBAAA8L,QAAA,yBAAAC,QAAA,8CCAlBH,EAAAC,QAAA,CAAkBpN,OAAA,wBAAAuN,aAAA,4BAAAtN,OAAA,6CCAlBkN,EAAAC,QAAA,CAAkBzI,MAAA,sBAAAK,QAAA,6CCAlBmI,EAAAC,QAAA,CAAkBlE,KAAA,oBAAAW,SAAA,6CCAlBsD,EAAAC,QAAA,CAAkB9P,OAAA,6CCAlB6P,EAAAC,QAAA,CAAkBtR,SAAA,iDCAlBqR,EAAAC,QAAA,CAAkB7O,YAAA,uDCAlB4O,EAAAC,QAAA,CAAkB5G,YAAA,uDCAlB2G,EAAAC,QAAA,CAAkBhI,OAAA,6CCAlB+H,EAAAC,QAAA,CAAkB7E,SAAA","file":"static/js/main.56280fc7.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './MenuToggle.css'\r\n\r\nconst MenuToggle = props => {\r\n\r\n\tconst cls = [\r\n\t\tclasses.MenuToggle,\r\n\t\t'fa'\r\n\t]\r\n\r\n\tif (props.isOpen) {\r\n\t\tcls.push('fa-times')\r\n\t\tcls.push(classes.open)\r\n\t}\t\t\r\n\telse cls.push('fa-bars')\r\n\r\n\treturn ( \r\n\t\t<i \r\n\t\t\tclassName={cls.join(' ')}\r\n\t\t\tonClick={props.onToggle}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Backdrop.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport classes from './Drawer.css'\r\nimport {NavLink} from 'react-router-dom' \r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\n\r\n// const links = [\r\n// \t{to: '/', label: 'Список', exact: true},\r\n// \t{to: '/auth', label: 'Авторизация', exact: false},\r\n// \t{to: '/quiz-creator', label: 'Создать тест', exact: false}\r\n// ]\r\n\r\nclass Drawer extends Component {\r\n\r\n\tclickHandler = () => {\r\n\t\tthis.props.onClose()\r\n\t}\r\n\t\r\n\trenderLinks(links) {\r\n\t\treturn links.map((link, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li key={index}>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tto={link.to}\r\n\t\t\t\t\t\texact={link.exact}\r\n\t\t\t\t\t\tactiveClassName={classes.active}\r\n\t\t\t\t\t\tonClick={this.clickHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{link.label}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst cls = [classes.Drawer]\r\n\r\n\t\tif (!this.props.isOpen) cls.push(classes.close)\r\n\r\n\t\tconst links = [\r\n\t\t\t{to: '/', label: 'Список', exact: true},\r\n\t\t\t// {to: '/auth', label: 'Авторизация', exact: false},\r\n\t\t\t// {to: '/quiz-creator', label: 'Создать тест', exact: false}\r\n\t\t]\r\n\r\n\t\tif (this.props.isAuthenticated) {\r\n\t\t\tlinks.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n\t\t\tlinks.push({to: '/logout', label: 'Выйти', exact: false})\r\n\t\t} else {\r\n\t\t\tlinks.push({to: '/auth', label: 'Авторизация', exact: false},)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<nav className={cls.join(' ')}>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.renderLinks(links)}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\r\n\t\t\t\t{this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from './Layout.css'\r\nimport MenuToggle from '../../components/navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/navigation/Drawer/Drawer'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Layout extends Component {\r\n\t\r\n\tstate = {\r\n\t\tmenu: false\r\n\t}\r\n\r\n\ttoggleMenuHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tmenu: !this.state.menu\r\n\t\t})\r\n\t}\r\n\r\n\tmenuCloseHandler = () => {\r\n\t\tthis.setState({\r\n\t\t\tmenu: false\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.Layout}>\r\n\r\n\t\t\t\t<Drawer \r\n\t\t\t\t\tisOpen={this.state.menu}\r\n\t\t\t\t\tonClose={this.menuCloseHandler}\r\n\t\t\t\t\tisAuthenticated={this.props.isAuthenticated}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<MenuToggle \r\n\t\t\t\t\tonToggle={this.toggleMenuHandler}\r\n\t\t\t\t\tisOpen={this.state.menu}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<main>{ this.props.children }</main>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tisAuthenticated: !!state.auth.token\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react';\r\nimport classes from './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n\tconst cls = [classes.AnswerItem]\r\n\r\n\tif (props.state) {\r\n\t\tcls.push(classes[props.state])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li \r\n\t\t\tclassName={cls.join(' ')}\r\n\t\t\tonClick={() => props.onAnswerClick(props.answer.id)}\r\n\t\t>\r\n\t\t\t{ props.answer.text }\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => (\r\n\r\n\t<ul className={classes.AnswersList}>\r\n\t\t{ props.answers.map((answer, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<AnswerItem \r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\tonAnswerClick={props.onAnswerClick}\r\n\t\t\t\t\tstate={props.state ? props.state[answer.id] : null}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}) }\r\n\t</ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.css'\r\nimport AnswerList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => (\r\n\t<div className={classes.ActiveQuiz}>\r\n\t\t<p className={classes.Question}>\r\n\t\t\t<span>\r\n\t\t\t\t<strong>{props.answerNumber}.</strong>&nbsp;\r\n\t\t\t\t{props.question}\r\n\t\t\t</span>\r\n\r\n\t\t\t<small>{props.answerNumber} из {props.quizLength}</small>\r\n\t\t</p>\r\n\t\t<AnswerList \r\n\t\t\tanswers={props.answers}\r\n\t\t\tonAnswerClick={props.onAnswerClick}\r\n\t\t\tstate={props.state}\r\n\t\t/>\t\t\r\n\t</div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n\r\n\tconst cls = [\r\n\t\tclasses.Button,\r\n\t\tclasses[props.type]\r\n\t]\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={props.onClick}\r\n\t\t\tclassName={cls.join(' ')}\r\n\t\t\tdisabled={props.disabled}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n\r\n\tconst successCount = Object.keys(props.results).reduce((total, key) => {\r\n\t\tif (props.results[key] === 'success') {\r\n\t\t\ttotal++\r\n\t\t}\r\n\r\n\t\treturn total\r\n\t}, 0)\r\n\r\n\treturn (\r\n\t\t<div className={classes.FinishedQuiz}>\r\n\t\t\t<ul>\r\n\t\t\t\t{props.quiz.map((quizItem, index) => {\r\n\t\t\t\t\tconst cls = [\r\n\t\t\t\t\t\t'fa',\r\n\t\t\t\t\t\tprops.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n\t\t\t\t\t\tclasses[props.results[quizItem.id]]\r\n\t\t\t\t\t]\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<strong>{index + 1}</strong>. &nbsp;\r\n\t\t\t\t\t\t\t{quizItem.question}\r\n\t\t\t\t\t\t\t<i className={cls.join(' ')} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n\t\t\t<div>\t\t\t\t\r\n\t\t\t\t<Button onClick={props.onRetry} type='primery'>Повторить</Button>\r\n\t\t\t\t<Link to={'/'}>\r\n\t\t\t\t\t<Button type='success'>Перейти в список тестов</Button>\r\n\t\t\t\t</Link>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.css'\r\n\r\nconst Loader = props => (\r\n\t<div className={classes.center}>\r\n\t\t<div className={classes.Loader}>\r\n\t\t\t<div /><div />\r\n\t\t</div>\r\n\t</div>\t\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://react-quiz-c978f.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import axios from '../../axios/axios-quiz'\r\nimport {FETCH_QUIZES_START, \r\n\tFETCH_QUIZES_SUCCESS, \r\n\tFETCH_QUIZES_ERROR, \r\n\tFETCH_QUIZ_SUCCESS,\r\n\tQUIZ_SET_STATE,\r\n\tFINISH_QUIZ,\r\n\tQUIZ_NEXT_QUESTION,\r\n\tQUIZ_RETRY\r\n} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\t\ttry{\r\n\t\t\tconst response = await axios.get('/quizes.json')\t\r\n\t\t\tconst quizes = [];\r\n\t\t\tObject.keys(response.data).forEach((key, index) => {\r\n\t\t\t\tquizes.push({\r\n\t\t\t\t\tid: key,\r\n\t\t\t\t\tname: `Тест №${index + 1}`\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t// this.setState({\r\n\t\t\t// \tquizes, \r\n\t\t\t// \tloading: false\r\n\t\t\t// })\r\n\t\t\tdispatch(fetchQuizesSuccess(quizes))\r\n\t\t} catch (e) {\r\n\t\t\t// console.log('e :::', e)\r\n\t\t\tdispatch(fetchQuizesError(e))\r\n\t\t}\t\r\n\t}\r\n}\r\n\r\nexport function fetchQuizById (quizId) {\r\n\treturn async dispatch => {\r\n\t\tdispatch(fetchQuizesStart())\r\n\r\n\t\ttry {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n\t}\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZ_SUCCESS,\r\n\t\tquiz\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_START\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_SUCCESS,\r\n\t\tquizes\r\n\t}\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n\treturn {\r\n\t\ttype: FETCH_QUIZES_ERROR,\r\n\t\terror: e\r\n\t}\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n\treturn {\r\n\t\ttype: QUIZ_SET_STATE,\r\n\t\tanswerState, results\r\n\t}\r\n}\r\n\r\nexport function finishQuiz() {\r\n\treturn{\r\n\t\ttype: FINISH_QUIZ\r\n\t}\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n\treturn{\r\n\t\ttype: QUIZ_NEXT_QUESTION,\r\n\t\tnumber\r\n\t}\r\n}\r\n\r\nexport function retryQuiz() {\r\n\treturn {\r\n\t\ttype: QUIZ_RETRY\r\n\t}\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n\treturn (dispatch, getState) => {\r\n\r\n\t\tconst state = getState().quiz\r\n\r\n\t\tif (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') return;\r\n        }\r\n        \r\n        // this.setState({\r\n        //     answerState: {[answerId]: 'success'}\r\n        // })\r\n\r\n        const question = state.quiz[state.activeQuestion];\r\n        const results = state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            // this.setState({\r\n            //     answerState: {[answerId]: 'success'},\r\n            //     results\r\n            // })\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isquizFinished(state)) {\r\n            \t\tdispatch(finishQuiz())\r\n                    // this.setState({\r\n                    //     isFinished: true\r\n                    // })\r\n                } else {\r\n                \tdispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                    // this.setState({\r\n                    //     activeQuestion: this.state.activeQuestion + 1, \r\n                    //     answerState: null\r\n                    // })\r\n                }\r\n\r\n\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        } else {\r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n            // this.setState({\r\n            //     answerState: {[answerId]: 'error'},\r\n            //     results\r\n            // })\r\n        }    \r\n\t}\r\n}\r\n\r\nfunction isquizFinished(state) {\r\n\treturn state.activeQuestion + 1 === state.quiz.length\r\n}","import React, { Component } from 'react';\r\nimport classes from './Quiz.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport axios from '../../axios/axios-quiz'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n    // onAnswerClickHandler = (answerId) => {\r\n\r\n        // if (this.state.answerState) {\r\n        //     const key = Object.keys(this.state.answerState)[0]\r\n        //     if (this.state.answerState[key] === 'success') return;\r\n        // }\r\n        \r\n        // this.setState({\r\n        //     answerState: {[answerId]: 'success'}\r\n        // })\r\n\r\n        // const question = this.state.quiz[this.state.activeQuestion];\r\n        // const results = this.state.results;\r\n\r\n        // if (question.rightAnswerId === answerId) {\r\n        //     if (!results[question.id]) {\r\n        //         results[question.id] = 'success'\r\n        //     }\r\n\r\n        //     this.setState({\r\n        //         answerState: {[answerId]: 'success'},\r\n        //         results\r\n        //     })\r\n\r\n        //     const timeout = window.setTimeout(() => {\r\n        //         if (this.quizFinished()) {\r\n        //             this.setState({\r\n        //                 isFinished: true\r\n        //             })\r\n        //         } else {\r\n        //             this.setState({\r\n        //                 activeQuestion: this.state.activeQuestion + 1, \r\n        //                 answerState: null\r\n        //             })\r\n        //         }\r\n\r\n\r\n        //         window.clearTimeout(timeout)\r\n        //     }, 1000)\r\n        // } else {\r\n        //     results[question.id] = 'error';\r\n        //     this.setState({\r\n        //         answerState: {[answerId]: 'error'},\r\n        //         results\r\n        //     })\r\n        // }        \r\n    // }\r\n\r\n    // quizFinished() {\r\n    //     return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    // }\r\n\r\n    // retryHandler = () => {\r\n    //     this.setState({\r\n    //         // activeQuestion: 0,\r\n    //         // answerState: null,\r\n    //         // isFinished: false,\r\n    //         // results: {}\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className={classes.Quiz}>\r\n            \t<div className={classes.QuizWrapper}>\r\n            \t\t<h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished ? \r\n                        <FinishedQuiz \r\n                            results={this.props.results}\r\n                            quiz={this.props.quiz}\r\n                            onRetry={this.props.retryQuiz}\r\n                        /> :\r\n                        <ActiveQuiz \r\n                            answers={this.props.quiz[this.props.activeQuestion].answer}\r\n                            question={this.props.quiz[this.props.activeQuestion].question}\r\n                            onAnswerClick={this.props.quizAnswerClick}\r\n                            quizLength={this.props.quiz.length}\r\n                            answerNumber={this.props.activeQuestion + 1}\r\n                            state={this.props.answerState}\r\n                        />                         \r\n                    }\t            \t\r\n\t            </div>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n\treturn !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\tconst inputType = props.type || 'text'\r\n\tconst cls = [classes.Input]\r\n\tconst htmlFor = `${inputType}-${Math.random()}`\r\n\r\n\tif (isInvalid(props)) {\r\n\t\tcls.push(classes.invalid)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cls.join(' ')}>\r\n\t\t\t<label htmlFor={htmlFor}>{props.label}</label>\r\n\t\t\t<input\r\n\t\t\t\ttype={inputType}\r\n\t\t\t\tid={htmlFor}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t/>\r\n\r\n\t\t\t{\r\n\t\t\t\tisInvalid(props) ? <span>{props.errorMessage || 'Введите верное значение'}</span> : null\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport classes from './Select.css'\r\n\r\nconst Select = props => {\r\n\tconst htmlFor = `${props.label}-${Math.random()}`\r\n\r\n\treturn (\r\n\t\t<div className={classes.Select}>\r\n\t\t\t<label htmlFor={htmlFor}>{props.label}</label>\r\n\t\t\t<select\r\n\t\t\t\tid={htmlFor}\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t>\r\n\t\t\t\t{props.options.map((option, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\tvalue={option.value}\r\n\t\t\t\t\t\t\tkey={option.value + index}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option.text}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</select>\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n\treturn {\r\n\t\t...config,\r\n\t\tvalidation,\r\n\t\tvalid: !validation,\r\n\t\ttouched: false,\r\n\t\tvalue: ''\r\n\t}\r\n}\r\n\r\nexport function validate (value, validation=null) {\r\n\tif (!validation) {\r\n\t\treturn true\r\n\t}\r\n\r\n\tlet isValid = true\r\n\r\n\tif (validation.required) {\r\n\t\tisValid = value.trim() !== '' && isValid\r\n\t}\r\n\r\n\treturn isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n\tlet isFormValid = true\r\n\r\n\tfor (let control in formControls) {\r\n\t\tif (formControls.hasOwnProperty(control)) {\r\n\t\t\tisFormValid = formControls[control].valid && isFormValid\r\n\t\t}\r\n\t}\r\n\r\n\treturn isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework.js'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary.js'\r\nimport {connect} from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\n// import axios from '../../axios/axios-quiz'\r\n\r\nfunction createOptionControl(number) {\r\n\treturn createControl({\r\n\t\t\t\tlabel: `Вариант ${number}`,\r\n\t\t\t\terrorMessage: 'Значение не может быть пустым',\r\n\t\t\t\tid: number\r\n\t\t\t}, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n\treturn {\r\n\t\t\tquestion: createControl({\r\n\t\t\t\tlabel: 'Введите вопрос',\r\n\t\t\t\terrorMessage: 'Вопрос не может быть пустым'\r\n\t\t\t}, {required: true}),\r\n\t\t\toption1: createOptionControl(1),\r\n\t\t\toption2: createOptionControl(2),\r\n\t\t\toption3: createOptionControl(3),\r\n\t\t\toption4: createOptionControl(4),\r\n\t\t}\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n\tstate = {\r\n\t\t// quiz: [],\r\n\t\tisFormValid: false,\r\n\t\trightAnswerId: 1,\r\n\t\tformControls: createFormControls()\r\n\t}\r\n\r\n\tsubmitHandler = event => {\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\taddQuestionHandler = event => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\t// const quiz = this.state.quiz.concat()\r\n\t\t// const index = quiz.length + 1\r\n\r\n\t\tconst {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n\t\tconst questionItem = {\r\n\t\t\tquestion: question.value,\r\n\t\t\tid: this.props.quiz.length + 1,\r\n\t\t\trightAnswerId: this.state.rightAnswerId,\r\n\t\t\tanswer: [\r\n\t\t\t\t{text: option1.value, id: option1.id},\r\n\t\t\t\t{text: option2.value, id: option2.id},\r\n\t\t\t\t{text: option3.value, id: option3.id},\r\n\t\t\t\t{text: option4.value, id: option4.id}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tthis.props.createQuizQuestion(questionItem)\r\n\r\n\t\t// quiz.push(questionItem)\r\n\r\n\t\tthis.setState({\r\n\t\t\t// quiz,\r\n\t\t\tisFormValid: false,\r\n\t\t\trightAnswerId: 1,\r\n\t\t\tformControls: createFormControls()\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tcreateQuizHandler = event => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\t// try {\r\n\t\t\t// axios.post('/quizes.json', this.state.quiz)\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t// quiz: [],\r\n\t\t\t\tisFormValid: false,\r\n\t\t\t\trightAnswerId: 1,\r\n\t\t\t\tformControls: createFormControls()\r\n\t\t\t})\r\n\r\n\t\t\tthis.props.finishCreateQuiz()\r\n\t\t// } catch (e) {\r\n\t\t// \tconsole.log('E ::', e)\r\n\t\t// }\r\n\t}\r\n\r\n\tchangeHandler = (value, controlName) => {\r\n\t\tconst formControls = { ... this.state.formControls }\r\n\t\tconst control = { ...formControls[controlName] }\r\n\r\n\t\tcontrol.touched = true\r\n\t\tcontrol.value = value\r\n\t\tcontrol.valid = validate(control.value, control.validation)\r\n\r\n\t\tformControls[controlName] = control\r\n\r\n\t\tthis.setState({\r\n\t\t\tformControls,\r\n\t\t\tisFormValid: validateForm(formControls)\r\n\t\t})\r\n\t}\r\n\r\n\trenderControls() {\r\n\t\treturn Object.keys(this.state.formControls).map((controlName, index) => {\r\n\t\t\tconst control = this.state.formControls[controlName]\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Auxiliary key={controlName + index}>\r\n\t\t\t\t<Input \r\n\t\t\t\t\tlabel={control.label}\r\n\t\t\t\t\tvalue={control.value}\r\n\t\t\t\t\tvalid={control.valid}\r\n\t\t\t\t\tshouldValidate={!!control.validation}\r\n\t\t\t\t\ttouched={control.touched}\r\n\t\t\t\t\terrorMessage={control.errorMessage}\r\n\t\t\t\t\tonChange={event => this.changeHandler(event.target.value, controlName)}\r\n\t\t\t\t/>\r\n\t\t\t\t{index === 0 ? <hr/> : null}\r\n\t\t\t\t</Auxiliary>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tselectChangeHandler = event => {\r\n\t\tthis.setState({\r\n\t\t\trightAnswerId: +event.target.value\r\n\t\t})\r\n\t\tconsole.log('event.target.value ::', event.target.value)\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst select = <Select \r\n\t\t\tlabel='Выберите правильный ответ'\r\n\t\t\tvalue={this.state.rightAnswerId}\r\n\t\t\tonChange={this.selectChangeHandler}\r\n\t\t\toptions={[\r\n\t\t\t\t{text: 1, value: 1},\r\n\t\t\t\t{text: 2, value: 2},\r\n\t\t\t\t{text: 3, value: 3},\r\n\t\t\t\t{text: 4, value: 4}\r\n\t\t\t]}\r\n\t\t/>\r\n\r\n\t\treturn(\r\n\t\t\t<div className={classes.QuizCreator}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>QuizCreator</h1>\t\r\n\r\n\t\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{this.renderControls()}\r\n\r\n\t\t\t\t\t\t{select}\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='primery'\r\n\t\t\t\t\t\t\tonClick={this.addQuestionHandler}\t\r\n\t\t\t\t\t\t\tdisabled={!this.state.isFormValid}\t\t\t\t\t\t\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tДобавить вопрос\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='success'\r\n\t\t\t\t\t\t\tonClick={this.createQuizHandler}\r\n\t\t\t\t\t\t\tdisabled={this.props.quiz.length === 0}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tСоздать тест\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tquiz: state.create.quiz\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tcreateQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n\t\tfinishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (QuizCreator)","import {CREATE_QUIZ_QUESTION,\r\n\tRESET_QUIZ_CREATION \t\r\n} from './actionTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n\treturn {\r\n\t\ttype: CREATE_QUIZ_QUESTION,\r\n\t\titem\r\n\t}\r\n}\r\n\r\nexport function resertQuizCreation() {\r\n\treturn {\r\n\t\ttype: RESET_QUIZ_CREATION\r\n\t}\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n\treturn async (dispatch, getState) => {\r\n\t\tawait axios.post('/quizes.json', getState().create.quiz)\r\n\t\tdispatch(resertQuizCreation())\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport classes from './QuizList.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\n// import axios from '../../axios/axios-quiz'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\n\r\nclass QuizList extends Component {\r\n\r\n\t// state = {\r\n\t// \tquizes: [],\r\n\t// \tloading: true\r\n\t// }\r\n\r\n\trenderQuizes() {\r\n\t\treturn this.props.quizes.map(quiz => {\r\n\t\t\treturn (\r\n\t\t\t\t<li\r\n\t\t\t\t\tkey={quiz.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NavLink to={'/quiz/' + quiz.id}>\r\n\t\t\t\t\t\t{quiz.name}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}) \r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\tthis.props.fetchQuizes()\r\n\r\n\t\t// try{\r\n\t\t// \tconst response = await axios.get('/quizes.json')\t\r\n\t\t// \tconst quizes = [];\r\n\t\t// \tObject.keys(response.data).forEach((key, index) => {\r\n\t\t// \t\tquizes.push({\r\n\t\t// \t\t\tid: key,\r\n\t\t// \t\t\tname: `Тест №${index + 1}`\r\n\t\t// \t\t})\r\n\t\t// \t})\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tquizes, \r\n\t\t// \t\tloading: false\r\n\t\t// \t})\r\n\t\t// } catch (e) {\r\n\t\t// \tconsole.log('e :::', e)\r\n\t\t// }\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className={classes.QuizList}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Список тестов</h1>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.loading && this.props.quizes.length != 0\r\n\t\t\t\t\t\t\t? <Loader />\r\n\t\t\t\t\t\t\t: <ul>\r\n\t\t\t\t\t\t\t\t{this.renderQuizes()}\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn{\r\n\t\tquizes: state.quiz.quizes,\r\n\t\tloading: state.quiz.loading\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n\treturn{\r\n\t\tfetchQuizes: () => dispatch(fetchQuizes())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import axios from '../../axios/axios-quiz'\r\nimport {AUTH_SUCCESS,\r\n\tAUTH_LOGOUT\r\n} from './actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n\treturn async dispatch => {\r\n\t\tconst authData = {\r\n\t\t\temail, password,\r\n\t\t\treturnSecureToken: true\r\n\t\t}\r\n\r\n\t\tlet url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBK9YZfrGVezsmyIW-zUTpRO3F3h353WDg'\r\n\r\n\t\tif (isLogin) {\r\n\t\t\turl = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBK9YZfrGVezsmyIW-zUTpRO3F3h353WDg' \r\n\t\t}\r\n\r\n\t\tconst response = await axios.post(url, authData)\r\n\t\tconst data = response.data\r\n\r\n\t\tconst expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n\t\tlocalStorage.setItem('token', data.idToken)\r\n\t\tlocalStorage.setItem('userId', data.localId)\r\n\t\tlocalStorage.setItem('expirationDate', expirationDate)\r\n\r\n\t\tdispatch(authSuccess(data.idToken))\r\n\t\tdispatch(autoLogout(data.expiresIn))\r\n\r\n\t\t\r\n\t\t// console.log(response.data)\r\n\r\n\t}\r\n}\r\n\r\nexport function autoLogout(time) {\r\n\treturn dispatch => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(logout())\r\n\t\t}, time * 1000)\r\n\t}\r\n\t\r\n}\r\n\r\nexport function logout() {\r\n\tlocalStorage.removeItem('token')\r\n\tlocalStorage.removeItem('userId')\r\n\tlocalStorage.removeItem('expirationDate')\r\n\treturn {\r\n\t\ttype: AUTH_LOGOUT\r\n\t}\r\n}\r\n\r\nexport function autoLogin() {\r\n\treturn dispatch => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\r\n\t\tif (!token) dispatch(logout())\r\n\t\telse {\r\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\t\t\tif (expirationDate <= new Date()) dispatch(logout())\r\n\t\t\telse {\r\n\t\t\t\tdispatch(authSuccess(token))\r\n\t\t\t\tdispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function authSuccess(token) {\r\n\treturn {\r\n\t\ttype: AUTH_SUCCESS,\r\n\t\ttoken\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport {auth} from '../../store/actions/auth'\r\n\r\nfunction validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n\tstate = {\r\n\t\tformControls: {\r\n\t\t\temail: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\ttype: 'email',\r\n\t\t\t\tlabel: 'Email',\r\n\t\t\t\terrorMessage: 'Введите корректный email',\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\temail: true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\ttype: 'password',\r\n\t\t\t\tlabel: 'Пароль',\r\n\t\t\t\terrorMessage: 'Введите корректный пароль',\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 6\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tloginHandler = () => {\r\n\r\n\t\tthis.props.auth(\r\n\t\t\tthis.state.formControls.email.value,\r\n\t\t\tthis.state.formControls.password.value,\r\n\t\t\ttrue\r\n\t\t)\r\n\r\n\t\t// const authData = {\r\n\t\t// \temail: this.state.formControls.email.value,\r\n\t\t// \tpassword: this.state.formControls.password.value,\r\n\t\t// \treturnSecureToken: true\r\n\t\t// }\r\n\t\t// try {\r\n\t\t// \tconst response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBK9YZfrGVezsmyIW-zUTpRO3F3h353WDg', authData)\r\n\t\t// \tconsole.log('response.data ::', response.data)\r\n\t\t// } catch (e) {\r\n\t\t// \tconsole.log('error ::', e)\r\n\t\t// }\r\n\t}\r\n\r\n\tregisterHandler = () => {\r\n\t\tthis.props.auth(\r\n\t\t\tthis.state.formControls.email.value,\r\n\t\t\tthis.state.formControls.password.value,\r\n\t\t\tfalse\r\n\t\t)\r\n\t\t// const authData = {\r\n\t\t// \temail: this.state.formControls.email.value,\r\n\t\t// \tpassword: this.state.formControls.password.value,\r\n\t\t// \treturnSecureToken: true\r\n\t\t// }\r\n\t\t// try {\r\n\t\t// \tconst response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBK9YZfrGVezsmyIW-zUTpRO3F3h353WDg', authData)\r\n\t\t// \tconsole.log('response.data ::', response.data)\r\n\t\t// } catch (e) {\r\n\t\t// \tconsole.log('error ::', e)\r\n\t\t// }\t\t\r\n\t}\r\n\r\n\tsubmitHandler = event => {\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\tvalidateControl(value, validation) {\r\n\t\tif (!validation) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tlet isValid = true\r\n\r\n\t\tif (validation.required) {\r\n\t\t\tisValid = value.trim() !== '' && isValid \r\n\t\t}\r\n\r\n\t\tif (validation.email) {\r\n\t\t\tisValid = validateEmail(value) && isValid\r\n\t\t}\r\n\r\n\t\tif (validation.minLength) {\r\n\t\t\tisValid = value.length >= validation.minLength && isValid\r\n\t\t}\r\n\r\n\t\treturn isValid\t\t\r\n\t}\r\n\r\n\tonChangeHandler = (event, controlName) => {\r\n\r\n\t\tconst formControls = { ... this.state.formControls }\r\n\t\tconst control = { ...formControls[controlName] }\r\n\r\n\t\tcontrol.value = event.target.value\r\n\t\tcontrol.touched = true\r\n\t\tcontrol.valid = this.validateControl(control.value, control.validation)\r\n\r\n\t\tformControls[controlName] = control\r\n\r\n\t\tlet isFormValid = true\r\n\r\n\t\tObject.keys(formControls).forEach(name => {\r\n\t\t\tisFormValid = formControls[name].valid && isFormValid\r\n\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\tformControls, isFormValid\r\n\t\t})\r\n\t}\r\n\r\n\trenderInputs() {\r\n\t\treturn Object.keys(this.state.formControls).map((controlName, index) => {\r\n\t\t\tconst control = this.state.formControls[controlName]\r\n\t\t\treturn (\r\n\t\t\t\t<Input \r\n\t\t\t\t\tkey={controlName + index}\r\n\t\t\t\t\ttype={control.type}\r\n\t\t\t\t\tvalue={control.value}\r\n\t\t\t\t\tvalid={control.valid}\r\n\t\t\t\t\ttouched={control.touched}\r\n\t\t\t\t\tlabel={control.label}\r\n\t\t\t\t\tshouldValidate={!!control.validation}\r\n\t\t\t\t\terrorMessage={control.errorMessage}\r\n\t\t\t\t\tonChange={event => this.onChangeHandler(event, controlName)}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Авторизация</h1>\r\n\r\n\t\t\t\t\t<form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\t\t\t\t\t\t{this.renderInputs()}\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='success'\r\n\t\t\t\t\t\t\tonClick={this.loginHandler}\r\n\t\t\t\t\t\t\tdisabled={!this.state.isFormValid}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype='primery'\r\n\t\t\t\t\t\t\tonClick={this.registerHandler}\r\n\t\t\t\t\t\t\tdisabled={!this.state.isFormValid}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tЗарегистрироваться\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tauth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n\t}\r\n}\r\n\r\nexport default connect (null, mapDispatchToProps)(Auth)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {logout} from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.logout()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <Redirect to={'/'} />\r\n\t}\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tlogout: () => dispatch(logout())\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from './store/actions/auth'\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.autoLogin()\n    }\n\n    render() {\n\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" component={Auth} />\n                <Route path='/quiz/:id' component={Quiz} />\n                <Route path='/' exact component={QuizList} />  \n                <Redirect to='/' />               \n            </Switch>\n        )\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>                    \n                    <Route path='/quiz-creator' component={QuizCreator} />\n                    <Route path='/quiz/:id' component={Quiz} />\n                    <Route path=\"/logout\" component={Logout} /> \n                    <Route path='' exact component={QuizList} />                      \n                    <Redirect to='/' />              \n                </Switch>\n            )\n        }\n\n\n        return (\n            <Layout>\n                { routes }\n            </Layout>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autoLogin: () => dispatch(autoLogin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_QUIZES_START, \r\n\tFETCH_QUIZES_SUCCESS, \r\n\tFETCH_QUIZES_ERROR, \r\n\tFETCH_QUIZ_SUCCESS,\r\n\tQUIZ_SET_STATE,\r\n\tFINISH_QUIZ,\r\n\tQUIZ_NEXT_QUESTION,\r\n\tQUIZ_RETRY\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\tquizes: [],\r\n\tloading: false,\r\n\terror: null,\r\n\tresults: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n\tquiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_QUIZES_START:\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: true\r\n\t\t\t}\r\n\t\tcase FETCH_QUIZES_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: false, quizes: action.quizes\r\n\t\t\t}\r\n\t\tcase FETCH_QUIZES_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: false, error: action.error\r\n\t\t\t}\r\n\t\tcase FETCH_QUIZ_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading: false, quiz: action.quiz\r\n\t\t\t}\r\n\t\tcase QUIZ_SET_STATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, answerState: action.answerState, results: action.results\r\n\t\t\t}\t\r\n\t\tcase FINISH_QUIZ:\t\r\n\t\t\treturn {\r\n\t\t\t\t...state, isFinished: true\r\n\t\t\t}\r\n\t\tcase QUIZ_NEXT_QUESTION:\t\r\n\t\t\treturn {\r\n\t\t\t\t...state, answerState: null, activeQuestion: action.number\r\n\t\t\t}\r\n\t\tcase QUIZ_RETRY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveQuestion: 0,\r\n\t            answerState: null,\r\n\t            isFinished: false,\r\n\t            results: {}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {CREATE_QUIZ_QUESTION,\r\n\tRESET_QUIZ_CREATION \t\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\tquiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n\tswitch(action.type){\r\n\t\tcase CREATE_QUIZ_QUESTION:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquiz: [...state.quiz, action.item]\r\n\t\t\t}\r\n\t\tcase RESET_QUIZ_CREATION:\r\n\t\t\treturn {\r\n\t\t\t\t...state, quiz: []\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {AUTH_SUCCESS,\r\n\tAUTH_LOGOUT\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n\ttoken: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase AUTH_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, token: action.token\r\n\t\t\t}\r\n\t\tcase AUTH_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, token: null\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers ({\r\n\tquiz: quizReducer,\r\n\tcreate: createReducer,\r\n\tauth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReduser from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(rootReduser, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n\t<Provider store = {store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n)\n\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--126oC\",\"close\":\"Drawer__close--3Xbud\",\"active\":\"Drawer__active--1pr-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--325vA\",\"open\":\"MenuToggle__open--2i7Lo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--1YgKh\",\"QuizWrapper\":\"Quiz__QuizWrapper--3xC_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--2aF-E\",\"Question\":\"ActiveQuiz__Question--1DBQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2E3aR\",\"success\":\"AnswerItem__success--1LWwO\",\"error\":\"AnswerItem__error--33P5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2KeHu\",\"success\":\"FinishedQuiz__success--2INri\",\"error\":\"FinishedQuiz__error--3HVNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--ajevi\",\"error\":\"Button__error--3i2F2\",\"success\":\"Button__success--1wqIA\",\"primery\":\"Button__primery--wmZRP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--2f_1D\",\"lds-ripple\":\"Loader__lds-ripple---Lu5S\",\"center\":\"Loader__center--1imo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--1VROp\",\"invalid\":\"Input__invalid--iI0zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--1TInt\",\"AuthForm\":\"Auth__AuthForm--38dS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--1WKx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--8k9Jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--2R7qz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--zn-IS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--1Dlta\"};"],"sourceRoot":""}